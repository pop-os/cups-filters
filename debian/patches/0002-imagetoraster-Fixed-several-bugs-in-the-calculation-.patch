From 06a5663212ac57145b1b87ab51f18709578ba223 Mon Sep 17 00:00:00 2001
From: Till Kamppeter <till.kamppeter@gmail.com>
Date: Mon, 26 Dec 2016 23:40:40 -0200
Subject: imagetoraster: Fixed several bugs in the calculation of the page
 geometry.

This is a backport from 1.13.2.

Backport-by: Didier Raboud <odyx@debian.org>
Bug-Debian: #849380
---
 filter/imagetoraster.c | 75 ++++++++++++++++++++++++++++++--------------------
 1 file changed, 45 insertions(+), 30 deletions(-)

diff --git a/filter/imagetoraster.c b/filter/imagetoraster.c
index 0b2492bc..4730f7e0 100644
--- a/filter/imagetoraster.c
+++ b/filter/imagetoraster.c
@@ -840,7 +840,7 @@ main(int  argc,				/* I - Number of command-line arguments */
 
       fputs("DEBUG: Auto orientation...\n", stderr);
 
-      if ((xsize * ysize) < (xsize2 * xsize2))
+      if ((xsize * ysize) < (xsize2 * ysize2))
       {
        /*
 	* Do landscape orientation...
@@ -982,19 +982,29 @@ main(int  argc,				/* I - Number of command-line arguments */
 
     header.cupsWidth  = width * header.HWResolution[0] / 72.0;
     header.cupsHeight = length * header.HWResolution[1] / 72.0;
+  } else {
+   /*
+    * Set the bitmap size...
+    */
 
-    header.cupsBytesPerLine = (header.cupsBitsPerPixel *
-                               header.cupsWidth + 7) / 8;
-
-    if (header.cupsColorOrder == CUPS_ORDER_BANDED)
-      header.cupsBytesPerLine *= header.cupsNumColors;
+    header.cupsWidth  = (Orientation & 1 ? yprint : xprint) *
+      header.HWResolution[0];
+    header.cupsHeight = (Orientation & 1 ? xprint : yprint) *
+      header.HWResolution[1];
   }
+  header.cupsBytesPerLine = (header.cupsBitsPerPixel *
+			     header.cupsWidth + 7) / 8;
+
+  if (header.cupsColorOrder == CUPS_ORDER_BANDED)
+    header.cupsBytesPerLine *= header.cupsNumColors;
 
   header.Margins[0] = PageLeft;
   header.Margins[1] = PageBottom;
 
   fprintf(stderr, "DEBUG: PageSize = [%d %d]\n", header.PageSize[0],
           header.PageSize[1]);
+  fprintf(stderr, "DEBUG: PageLeft = %f, PageRight = %f, PageBottom = %f, PageTop = %f\n",
+	  PageLeft, PageRight, PageBottom, PageTop);
 
   switch (Orientation)
   {
@@ -1036,32 +1046,32 @@ main(int  argc,				/* I - Number of command-line arguments */
 	switch (XPosition)
 	{
 	  case -1 :
-              header.cupsImagingBBox[0] = PageBottom;
-	      header.cupsImagingBBox[2] = PageBottom + yprint * 72;
+              header.cupsImagingBBox[0] = PageLeft;
+	      header.cupsImagingBBox[2] = PageLeft + yprint * 72;
 	      break;
 	  default :
-              header.cupsImagingBBox[0] = (PageTop + PageBottom - yprint * 72) / 2;
-	      header.cupsImagingBBox[2] = (PageTop + PageBottom + yprint * 72) / 2;
+              header.cupsImagingBBox[0] = (PageRight + PageLeft - yprint * 72) / 2;
+	      header.cupsImagingBBox[2] = (PageRight + PageLeft + yprint * 72) / 2;
 	      break;
 	  case 1 :
-              header.cupsImagingBBox[0] = PageTop - yprint * 72;
-	      header.cupsImagingBBox[2] = PageTop;
+              header.cupsImagingBBox[0] = PageRight - yprint * 72;
+	      header.cupsImagingBBox[2] = PageRight;
 	      break;
 	}
 
 	switch (YPosition)
 	{
 	  case -1 :
-              header.cupsImagingBBox[1] = PageLeft;
-	      header.cupsImagingBBox[3] = PageLeft + xprint * 72;
+              header.cupsImagingBBox[1] = PageBottom;
+	      header.cupsImagingBBox[3] = PageBottom + xprint * 72;
 	      break;
 	  default :
-              header.cupsImagingBBox[1] = (PageRight + PageLeft - xprint * 72) / 2;
-	      header.cupsImagingBBox[3] = (PageRight + PageLeft + xprint * 72) / 2;
+              header.cupsImagingBBox[1] = (PageTop + PageBottom - xprint * 72) / 2;
+	      header.cupsImagingBBox[3] = (PageTop + PageBottom + xprint * 72) / 2;
 	      break;
 	  case 1 :
-              header.cupsImagingBBox[1] = PageRight - xprint * 72;
-	      header.cupsImagingBBox[3] = PageRight;
+              header.cupsImagingBBox[1] = PageTop - xprint * 72;
+	      header.cupsImagingBBox[3] = PageTop;
 	      break;
 	}
 	break;
@@ -1104,32 +1114,32 @@ main(int  argc,				/* I - Number of command-line arguments */
 	switch (XPosition)
 	{
 	  case 1 :
-              header.cupsImagingBBox[0] = PageBottom;
-	      header.cupsImagingBBox[2] = PageBottom + yprint * 72;
+              header.cupsImagingBBox[0] = PageLeft;
+	      header.cupsImagingBBox[2] = PageLeft + yprint * 72;
 	      break;
 	  default :
-              header.cupsImagingBBox[0] = (PageTop + PageBottom - yprint * 72) / 2;
-	      header.cupsImagingBBox[2] = (PageTop + PageBottom + yprint * 72) / 2;
+              header.cupsImagingBBox[0] = (PageRight + PageLeft - yprint * 72) / 2;
+	      header.cupsImagingBBox[2] = (PageRight + PageLeft + yprint * 72) / 2;
 	      break;
 	  case -1 :
-              header.cupsImagingBBox[0] = PageTop - yprint * 72;
-	      header.cupsImagingBBox[2] = PageTop;
+              header.cupsImagingBBox[0] = PageRight - yprint * 72;
+	      header.cupsImagingBBox[2] = PageRight;
 	      break;
 	}
 
 	switch (YPosition)
 	{
 	  case 1 :
-              header.cupsImagingBBox[1] = PageLeft;
-	      header.cupsImagingBBox[3] = PageLeft + xprint * 72;
+              header.cupsImagingBBox[1] = PageBottom;
+	      header.cupsImagingBBox[3] = PageBottom + xprint * 72;
 	      break;
 	  default :
-              header.cupsImagingBBox[1] = (PageRight + PageLeft - xprint * 72) / 2;
-	      header.cupsImagingBBox[3] = (PageRight + PageLeft + xprint * 72) / 2;
+              header.cupsImagingBBox[1] = (PageTop + PageBottom - xprint * 72) / 2;
+	      header.cupsImagingBBox[3] = (PageTop + PageBottom + xprint * 72) / 2;
 	      break;
 	  case -1 :
-              header.cupsImagingBBox[1] = PageRight - xprint * 72;
-	      header.cupsImagingBBox[3] = PageRight;
+              header.cupsImagingBBox[1] = PageTop - xprint * 72;
+	      header.cupsImagingBBox[3] = PageTop;
 	      break;
 	}
 	break;
@@ -1140,6 +1150,11 @@ main(int  argc,				/* I - Number of command-line arguments */
   header.ImagingBoundingBox[2] = header.cupsImagingBBox[2];
   header.ImagingBoundingBox[3] = header.cupsImagingBBox[3];
 
+  fprintf(stderr, "DEBUG: Orientation: %d, XPosition: %d, YPosition: %d, ImagingBoundingBox = [%d %d %d %d]\n",
+	  Orientation, XPosition, YPosition,
+	  header.ImagingBoundingBox[0], header.ImagingBoundingBox[1],
+	  header.ImagingBoundingBox[2], header.ImagingBoundingBox[3]);
+
   if (header.cupsColorOrder == CUPS_ORDER_PLANAR)
     num_planes = header.cupsNumColors;
   else
